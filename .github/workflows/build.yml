name: build

on:
  push:
    branches: [ unstable ]
  pull_request:
    branches: [ unstable ]

jobs:
  build:

    strategy:
      fail-fast: false
      matrix:
        include:
          - {os: ubuntu-18.04, cc: clang-11, cxx: clang++-11}
          - {os: ubuntu-20.04, cc: clang-10, cxx: clang++-10}
          - {os: ubuntu-20.04, cc: clang-11, cxx: clang++-11}
            #- {os: macos-10.15, cc: /usr/local/opt/llvm/bin/clang, cxx: /usr/local/opt/llvm/bin/clang++}

    runs-on: ${{ matrix.os }}

    steps:
    - uses: actions/checkout@v2

    - name: Install ubuntu 20.04 clang-10 dependencies
      if: matrix.os == 'ubuntu-20.04' && matrix.cc == 'clang-10'
      run: >
        sudo apt-get update &&
        sudo apt-get install
        clang-10
        clang-tools-10
        libclang-10-dev
        libhdf5-dev
        python3-dev
        python3-numpy

    - name: Install dependencies for ubuntu 18.04 and 20.04 builds with clang-11
      if: (matrix.os == 'ubuntu-18.04' || matrix.os == 'ubuntu-20.04') && matrix.cc == 'clang-11'
      run: |
        sudo bash -c "$(wget -O - https://apt.llvm.org/llvm.sh)"
        sudo apt-get install libclang-11-dev libhdf5-dev python3-dev python3-numpy

    - name: Install homebrew dependencies
      if: matrix.os == 'macos-10.15'
      run: |
        brew install llvm hdf5
        pip3 install numpy

    - name: Build clair
      env:
        CC: ${{ matrix.cc }}
        CXX: ${{ matrix.cxx }}
        LIBRARY_PATH: /usr/local/opt/llvm/lib
        CMAKE_PREFIX_PATH: /usr/lib/llvm-11/lib/cmake/clang:/usr/lib/llvm-10/lib/cmake/clang
      run: |
        mkdir build && cmake -B build -DCMAKE_INSTALL_PREFIX=/opt/clair
        cmake --build build -j2

    - name: Test clair
      env:
        DYLD_FALLBACK_LIBRARY_PATH: /usr/local/opt/llvm/lib
      run: |
        cd build
        ctest -j2 --output-on-failure
